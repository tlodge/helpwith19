{"version":3,"sources":["features/home/components/Home.js","features/apply/components/Apply.js","features/howitworks/components/HowItWorks.js","features/volunteer/components/Volunteer.js","features/resources/components/Resources.js","App.js","serviceWorker.js","index.js","reducer.js","store/configureStore.production.js","features/home/home.js","features/apply/apply.js","features/volunteer/volunteer.js","features/resources/resources.js","store/configureStore.js","banner.svg"],"names":["connect","selector","dispatch","actions","bindActionCreators","homeActions","horizontal","style","marginTop","lineHeight","to","applyActions","overflow","label","labelFor","labelInfo","width","id","placeholder","helperText","rows","growVertically","large","intent","Intent","PRIMARY","icon","HowItWorks","volunteerActions","resourceActions","href","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","collection","add","first","last","born","then","docRef","console","log","catch","error","store","configureStore","App","className","Group","align","Alignment","LEFT","Heading","Divider","src","banner","path","Users","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","combineReducers","routing","homeName","home","applyName","apply","resourcesName","resources","volunteerName","volunteer","enhancer","compose","applyMiddleware","promiseMiddleware","thunk","createStore","initialState","rootReducer","INIT","NAME","reducer","state","action","type","createStructuredSelector","actionCreators","init","module","exports","require","default"],"mappings":"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","file":"static/js/main.6380d5c6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { actionCreators as homeActions, selector } from '../';\nimport { bindActionCreators } from 'redux';\nimport { Divider } from \"@blueprintjs/core\";\n\nimport {\n    Link\n} from \"react-router-dom\";\n\nfunction Home() {\n    return <>\n        <h3>Design and Development support for Nottingham businesses and charities</h3>\n        <Divider horizontal=\"true\"/>\n        <div style={{marginTop:10, lineHeight:1.7}}>\n            <p>We are a group of IT professionals; <strong>designers, web and app developers and IT managers </strong>who want to do our bit to support the Nottingham business, charity and voluntary sectors during the Covid-19 pandemic. </p> \n            \n            <p> We expect that there are many small businesses, charities and volunteer organisations that urgently need improve their online resources to better deal with this crisis and we would very much like to help.  Whatever you're grappling with technically; whether creating a skeleton service, getting your stock online, creating shopping carts and payment gateways, supporting order fulfilment, or simply getting advice - we may be able to help.  If you're interested, please fill in a few details on the <Link to=\"/apply\">apply</Link> page and we will get back to you.</p>\n\n            <p>If you have technical skills, whether in coding or setting up and managing IT solutions, we could also do with your help.  Please provide your details on the <Link to=\"/volunteer\">volunteer</Link> page, where we provide further information on the skills that we require.  We are finding our way at the moment, trying to understand the limits of what we might achieve and how we might best support the local business, charity and voluntary sectors.  If you have any ideas please do get in touch. </p>\n        </div>\n       \n    </>\n}\n\nexport default connect(selector, (dispatch) => ({\n    actions: bindActionCreators(homeActions, dispatch)\n}))(Home);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { actionCreators as applyActions, selector } from '../';\nimport { bindActionCreators } from 'redux';\nimport { Divider, FormGroup, InputGroup, TextArea, Intent , Button} from \"@blueprintjs/core\";\n\nimport {\n    Link\n} from \"react-router-dom\";\n\nfunction Apply() {\n    return <>\n        <h3>Apply for help</h3>\n        <Divider horizontal=\"true\"/>\n        <div style={{marginTop:10, lineHeight:1.7, overflow:\"auto\"}}>\n             <p>Use this form to apply for help.  Please provide as much useful information as you can, as this will enable us to perform an initial feasibility assessment.  We may need to contact you to gather more detail.</p>  \n             <FormGroup\n                label=\"Business Name\"\n                labelFor=\"text-input\"\n                labelInfo=\"*\">\n                <InputGroup style={{width:500}} id=\"text-input\" placeholder=\"Business Name\" />\n            </FormGroup>\n            <FormGroup\n                label=\"Business Description\"\n                labelFor=\"text-input\"\n                helperText=\"A quick overview of what you do; no need to provide extensive details if your business is well undertood (e.g restaurant, florist, pub)\"\n                labelInfo=\"\">\n                <TextArea\n                    style={{width:500}}\n                    rows={2}\n                    growVertically={true}\n                    large={true}\n                    intent={Intent.PRIMARY}\n                    /*onChange={this.handleChange}\n                    value={this.state.value}*/\n                />\n            </FormGroup>\n            <FormGroup\n                label=\"Help required\"\n                labelFor=\"text-input\"\n                helperText=\"Please provide as much information here on the technical support that you feel you need.  Please limit it to the minimum you think you'll need in order to be able to trade online.\"\n                labelInfo=\"*\">\n                <TextArea\n                    style={{width:500}}\n                    rows={5}\n                    growVertically={true}\n                    large={true}\n                    intent={Intent.PRIMARY}\n                    /*onChange={this.handleChange}\n                    value={this.state.value}*/\n                />\n            </FormGroup>\n            <Button icon=\"upload\">Apply</Button>\n        </div>\n    </>\n}\n\nexport default connect(selector, (dispatch) => ({\n    actions: bindActionCreators(applyActions, dispatch)\n}))(Apply);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Divider } from \"@blueprintjs/core\";\n\nimport {\n    Link\n} from \"react-router-dom\";\n\nexport default function HowItWorks() {\n    return <>\n        <h3>How it works</h3>\n        <Divider horizontal=\"true\"/>\n        <div style={{marginTop:10, lineHeight:1.7}}>\n                Dependent upon the number of volunteers and applications we get, our current process is simple.  We first ask you to apply through this site.  We will then briefly assess your application and get back to you to gather further details.  We will then package uo your requirements into a project, which we will dirstibute amongst our volunteers to request those with relevant skills to take on.  They will then get in contact with you, and will provide advice or work on a solution as required.  \n        </div>\n       \n    </>\n}\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { actionCreators as volunteerActions, selector } from '../';\nimport { bindActionCreators } from 'redux';\nimport { Divider } from \"@blueprintjs/core\";\n\nimport {\n    Link\n} from \"react-router-dom\";\n\nfunction Volunteer() {\n    return <>\n        <h3>Thanks for considering volunteering!</h3>\n        <Divider horizontal=\"true\"/>\n        <div style={{marginTop:10, lineHeight:1.7}}>\n                <ul>\n                    <li>communications - manage comms between dev teams, set up tools etc</li>\n                    <li>project managers - oversee dev work for small projects</li>\n                    <li>web developers</li>\n                    <li>app developers</li>\n                    <li>designers</li>\n                    <li>infrastructure experts / backend developers</li>\n                </ul>\n        </div>\n       \n    </>\n}\n\nexport default connect(selector, (dispatch) => ({\n    actions: bindActionCreators(volunteerActions, dispatch)\n}))(Volunteer);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { actionCreators as resourceActions, selector } from '../';\nimport { bindActionCreators } from 'redux';\nimport { Divider } from \"@blueprintjs/core\";\n\nimport {\n    Link\n} from \"react-router-dom\";\n\nfunction Resources() {\n    return <>\n        <h3>Resources</h3>\n        <Divider horizontal=\"true\"/>\n        <div style={{marginTop:10, lineHeight:1.7}}>\n               <p>We have begun to create a set of online resources that may help you with an enhanced online presence.  This is a community created resource, so sits on a wiki.  Please click on any of the following categories to get more information:</p>\n               <ul>\n                   <li><a href=\"#\">shopping cart solutions</a></li>\n                   <li><a href=\"#\">payment gateways</a></li>\n                   <li><a href=\"#\">delivery fulfilment</a></li>\n                   <li><a href=\"#\">customer communication</a></li>\n                   <li><a href=\"#\">marketing and social media</a></li>\n                   <li><a href=\"#\">design resources</a></li>\n               </ul>\n        </div>\n       \n    </>\n}\n\nexport default connect(selector, (dispatch) => ({\n    actions: bindActionCreators(resourceActions, dispatch)\n}))(Resources);","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { Button, Intent, Spinner, Navbar, Alignment } from \"@blueprintjs/core\";\n // using node-style package resolution in a CSS file: \nimport Home from \"./features/home/components\";\nimport Apply from \"./features/apply/components\";\nimport HowItWorks from \"./features/howitworks/components\";\nimport Volunteer from \"./features/volunteer/components\";\nimport Resources from \"./features/resources/components\";\n\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport './App.css';\nimport configureStore from './store/configureStore';\nimport banner from './banner.svg';\n// using JSX:\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport * as firebase from 'firebase';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBLhNTd-wUUSCtmxfipDoP9AWwbbVoosNs\",\n  authDomain: \"helpwith19.firebaseapp.com\",\n  databaseURL: \"https://helpwith19.firebaseio.com\",\n  projectId: \"helpwith19\",\n  storageBucket: \"helpwith19.appspot.com\",\n  messagingSenderId: \"664811162099\",\n  appId: \"1:664811162099:web:e8843991ecde7bb333aa86\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nvar db = firebase.firestore();\ndb.collection(\"users\").add({\n  first: \"Ada\",\n  last: \"Lovelace\",\n  born: 1815\n})\n.then(function(docRef) {\n  console.log(\"Document written with ID: \", docRef.id);\n})\n.catch(function(error) {\n  console.error(\"Error adding document: \", error);\n});\n//const databaseRef = firebase.database().ref();\n//const todosRef = databaseRef.child(\"helpwith19\")\n//todosRef.push().set({hello:\"world\"});\nconst store = configureStore();\n//const history = syncHistoryWithStore(browserHistory, store);\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <Router>\n\n        <Navbar className=\"bp3-dark\">\n          <Navbar.Group align={Alignment.LEFT}>\n            <Navbar.Heading>Help with Covid-19</Navbar.Heading>\n            <Navbar.Divider />\n          <button className=\"bp3-button bp3-minimal\"> <Link to=\"/\">home</Link> </button>\n          <button className=\"bp3-button bp3-minimal\"> <Link to=\"/apply\">apply</Link> </button>\n          <button className=\"bp3-button bp3-minimal\"><Link to=\"/volunteer\">volunteer!</Link></button>\n          <button className=\"bp3-button bp3-minimal\"><Link to=\"/howitworks\">how it works</Link></button>\n          <button className=\"bp3-button bp3-minimal\"><Link to=\"/resources\">resources</Link></button>\n          </Navbar.Group>\n        </Navbar>\n        <img className=\"banner\" src={banner}></img>\n        <div className=\"content\" style={{overflow:\"auto\"}}>\n\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/apply\">\n              <Apply/>\n            </Route>\n            <Route path=\"/volunteer\">\n              <Volunteer />\n            </Route>\n            <Route path=\"/users\">\n              <Users />\n            </Route>\n            <Route path=\"/howitworks\">\n              <HowItWorks />\n            </Route>\n            <Route path=\"/resources\">\n              <Resources />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n          \n          </div>\n          <div className=\"footer\"></div>\n      </Router>\n    </Provider>\n  );\n}\n\n\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n  return <>\n    <h2>Users</h2>;\n    <Spinner intent={Intent.PRIMARY} />\n  </>\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { combineReducers } from 'redux';\nimport { routerReducer as routing } from 'react-router-redux';\n\n\nimport home, { NAME as homeName } from './features/home';\nimport apply, { NAME as applyName } from './features/apply';\nimport resources, { NAME as resourcesName } from './features/resources';\nimport volunteer, {NAME as volunteerName} from './features/volunteer';\nexport default combineReducers({\n  routing,\n  [homeName]: home,\n  [applyName]: apply,\n  [resourcesName]: resources,\n  [volunteerName]: volunteer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducer';\n\nconst enhancer = compose(\n  applyMiddleware(...[promiseMiddleware,thunk])\n)(createStore);\n\nexport default function configureStore(initialState) {\n  return enhancer(rootReducer, initialState);\n}\n","import { createStructuredSelector } from 'reselect';\n\n// Action Types\nconst INIT = 'helpwith19/home/INIT';\n\nexport const NAME = 'home';\n\nconst initialState = {\n   home: \"\"\n};\n\nexport default function reducer(state = initialState, action ={}) {\n   \n  switch (action.type) {\n    \n    case INIT:\n        return {\n            ...state\n        }\n\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nfunction init(){\n    return {\n        type: INIT\n    }\n}\n\nconst home = (state) => state[NAME].home;\n\n\nexport const selector = createStructuredSelector({\n    home\n});\n\nexport const actionCreators = {\n    init\n};","import { createStructuredSelector } from 'reselect';\n\n// Action Types\nconst INIT = 'helpwith19/apply/INIT';\n\nexport const NAME = 'apply';\n\nconst initialState = {\n   apply: \"\"\n};\n\nexport default function reducer(state = initialState, action ={}) {\n   \n  switch (action.type) {\n    \n    case INIT:\n        return {\n            ...state\n        }\n\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nfunction init(){\n    return {\n        type: INIT\n    }\n}\n\nconst apply = (state) => state[NAME].apply;\n\n\nexport const selector = createStructuredSelector({\n    apply\n});\n\nexport const actionCreators = {\n    init\n};","import { createStructuredSelector } from 'reselect';\n\n// Action Types\nconst INIT = 'helpwith19/volunteer/INIT';\n\nexport const NAME = 'volunteer';\n\nconst initialState = {\n   home: \"\"\n};\n\nexport default function reducer(state = initialState, action ={}) {\n   \n  switch (action.type) {\n    \n    case INIT:\n        return {\n            ...state\n        }\n\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nfunction init(){\n    return {\n        type: INIT\n    }\n}\n\nconst volunteer = (state) => state[NAME].volunteer;\n\n\nexport const selector = createStructuredSelector({\n    volunteer\n});\n\nexport const actionCreators = {\n    init\n};","import { createStructuredSelector } from 'reselect';\n\n// Action Types\nconst INIT = 'helpwith19/resources/INIT';\n\nexport const NAME = 'resources';\n\nconst initialState = {\n   home: \"\"\n};\n\nexport default function reducer(state = initialState, action ={}) {\n   \n  switch (action.type) {\n    \n    case INIT:\n        return {\n            ...state\n        }\n\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nfunction init(){\n    return {\n        type: INIT\n    }\n}\n\nconst resources = (state) => state[NAME].volunteer;\n\n\nexport const selector = createStructuredSelector({\n    resources\n});\n\nexport const actionCreators = {\n    init\n};","if (process.env.NODE_ENV === 'production') {\n    module.exports = require('./configureStore.production').default;\n  }\n  else {\n    module.exports = require('./configureStore.development').default;\n  }\n  ","module.exports = __webpack_public_path__ + \"static/media/banner.000d8e9f.svg\";"],"sourceRoot":""}